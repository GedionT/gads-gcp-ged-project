# creating the vm 
- image is specific debian image and attached is a peristent SSD of 50GB.  

gcloud beta compute --project=qwiklabs-gcp-04-19cd4ae44d3e instances create mc-server --zone=us-central1-a --machine-type=e2-medium --subnet=default --address=35.188.79.79 --network-tier=PREMIUM --maintenance-policy=MIGRATE --service-account=113943527356-compute@developer.gserviceaccount.com --scopes=https://www.googleapis.com/auth/servicecontrol,https://www.googleapis.com/auth/service.management.readonly,https://www.googleapis.com/auth/logging.write,https://www.googleapis.com/auth/monitoring.write,https://www.googleapis.com/auth/trace.append,https://www.googleapis.com/auth/devstorage.read_write --tags=minecraft-server --image=debian-9-stretch-v20200910 --image-project=debian-cloud --boot-disk-size=10GB --boot-disk-type=pd-standard --boot-disk-device-name=mc-server --create-disk=mode=rw,size=50,type=projects/qwiklabs-gcp-04-19cd4ae44d3e/zones/us-central1-a/diskTypes/pd-ssd,name=minecraft-disk,device-name=minecraft-disk --reservation-affinity=any

# Prepare the data disk
- Create a directory and format and mount the disk

sudo mkdir -p /home/minecraft

sudo mkfs.ext4 -F -E lazy_itable_init=0,\
lazy_journal_init=0,discard \
/dev/disk/by-id/google-minecraft-disk

sudo mount -o discard,defaults /dev/disk/by-id/google-minecraft-disk /home/minecraft

# Install and run the application
The Minecraft server runs on top of the Java Virtual Machine (JVM), so it requires the Java Runtime Environment (JRE) to run. Because the server doesn't need a graphical user interface, you use the headless version of the JRE. This reduces the JRE's resource usage on the machine, which helps ensure that the Minecraft server has enough room to expand its own resource usage if needed.

- Install the Java Runtime Environment (JRE) and the Minecraft server

sudo apt-get update

sudo apt-get install -y default-jre-headless

cd /home/minecraft

sudo apt-get install wget

sudo wget https://launcher.mojang.com/v1/objects/d0d0fe2b1dc6ab4c65554cb734270872b72dadd6/server.jar

- Initialize the Minecraft server

sudo java -Xmx1024M -Xms1024M -jar server.jar nogui

sudo ls -l

sudo nano eula.txt
- modify the eula=false to eula=true
sudo cat eula.txt 
- to verify that files has been saved properly


# Create a virtual terminal screen to start the Minecraft server
If you start the Minecraft server again now, it is tied to the life of your SSH session: that is, if you close your SSH terminal, the server is also terminated. To avoid this issue, you can use screen, an application that allows you to create a virtual terminal that can be "detached," becoming a background process, or "reattached," becoming a foreground process. When a virtual terminal is detached to the background, it will run whether you are logged in or not.

sudo apt-get install -y screen

sudo screen -S mcs java -Xmx1024M -Xms1024M -jar server.jar nogui

- Detach from the screen and close your SSH session
To detach the screen terminal, press Ctrl+A, Ctrl+D. The terminal continues to run in the background. To reattach the terminal, run the following command:
sudo screen -r mcs

exit

!!# set up and customized a VM and installed and configured application softwareâ€”a Minecraft server!


# Allow client traffic
Up to this point, the server has an external static IP address, but it cannot receive traffic because there is no firewall rule in place. Minecraft server uses TCP port 25565 by default. So you need to configure a firewall rule to allow these connections.

- Create a firewall rule
gcloud compute --project=qwiklabs-gcp-04-19cd4ae44d3e firewall-rules create minecraft-rule --direction=INGRESS --priority=1000 --network=default --action=ALLOW --rules=tcp:25565 --source-ranges=0.0.0.0/0 --target-tags=minecraft-server

--using external ip, we can check on other websites if the clients can connect to the mc-server.

# Schedule regular backups
Backing up your application data is a common activity. In this case, you configure the system to back up Minecraft world data to Cloud Storage.

- ssh into mc-vm 
export YOUR_BUCKET_NAME=gedbuckgad
echo $YOUR_BUCKET_NAME
gsutil mb gs://$YOUR_BUCKET_NAME-minecraft-backup

- Create a backup script

cd /home/minecraft

sudo nano /home/minecraft/backup.sh

- add the script below and save and exit
#!/bin/bash
screen -r mcs -X stuff '/save-all\n/save-off\n'
/usr/bin/gsutil cp -R ${BASH_SOURCE%/*}/world gs://${YOUR_BUCKET_NAME}-minecraft-backup/$(date "+%Y%m%d-%H%M%S")-world
screen -r mcs -X stuff '/save-on\n'

sudo chmod 755 /home/minecraft/backup.sh

# Test the backup script and schedule a cron job
. /home/minecraft/backup.sh

sudo crontab -e

select nano and enter

-At the bottom of the cron table, paste the following line:

0 */4 * * * /home/minecraft/backup.sh

-The line instructs cron to run backups every 4 hours.

- This creates about 300 backups a month in Cloud Storage, so you will want to regularly delete them to avoid charges. Cloud Storage offers the Object Lifecycle Management feature to set a Time to Live (TTL) for objects, archive older versions of objects, or "downgrade" storage classes of objects to help manage costs.

# Server maintenance
- To perform server maintenance, you need to shut down the server.

- Connect via SSH to the server, stop it and shut down the VM

sudo screen -r -X stuff '/stop\n'




